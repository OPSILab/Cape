{
    "swagger": "2.0",
    "info": {
        "version": "0.0.1",
        "title": "Account Manager APIs",
        "description": "Technical specification of Account Manager APIs. This APis provide functionalities for managing the Account Owner's account. In addition, they provide functionalities for performing the linking process between a Service and the Account Owner's account."
    },
    "basePath": "/account-manager/api/v1",
    "tags": [
        {
            "name": "Internal",
            "description": "The APIs for communications between CaPe internal components and its frontend "
        },
        {
            "name": "External",
            "description": "The APIs for CaPe interaction with external entities"
        },
        {
            "name": "Account Owner",
            "description": "APIs used by the CaPe Account Owner, enabling it to perform management operations on its own Account and related Service Links"
        },
        {
            "name": "Service",
            "description": "APIs used by the Service or Service Provider, in order to manage and retrieve information about the Service Links and Accounts in which its users are involved"
        }
    ],
    "schemes": [
        "https"
    ],
    "paths": {
        "/accounts": {
            "post": {
                "description": "Creates a new Account",
                "summary": "Create a new Account",
                "operationId": "createAccount",
                "tags": [
                    "Internal",
                    "External",
                    "Account Owner",
                    "Service"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "Object representing the Account to be created",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Account"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful Response; the Account was created successfully",
                        "schema": {
                            "$ref": "#/definitions/Account"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict - Account already present with the same username",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/accounts/{accountId}": {
            "get": {
                "description": "Gets an existing Account, with optionally all the related Personal Data",
                "summary": "Get an existing Account",
                "operationId": "getAccount",
                "tags": [
                    "Internal",
                    "External",
                    "Account Owner",
                    "Service"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The unique identifier of the Account to be retrieved",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "withPData",
                        "in": "query",
                        "description": "The flag (True/False) to retrieve the Personal Data related to the requested account",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response. Required Account",
                        "schema": {
                            "$ref": "#/definitions/Account"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found - Account with provided username was not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing Account",
                "summary": "Update an existing Account",
                "operationId": "updateAccount",
                "tags": [
                    "Internal",
                    "Account Owner"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The unique identifier of the Account to be updated",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response; the Account was updated successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Account"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found - Account with provided username was not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an existing Account and all related Personal Data",
                "summary": "Deletes an existing Account and all related Personal Data",
                "operationId": "deleteAccount",
                "tags": [
                    "Internal",
                    "Account Owner"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The unique identifier of the Account to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response; the Account was deleted successfully"
                    },
                    "404": {
                        "description": "Not Found - Account with provided username was not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/accounts/{accountId}/download": {
            "get": {
                "description": "Download the dump file of an existing Account with all the related Personal Data, in JSON format",
                "summary": "Download the dump file of an existing Account",
                "operationId": "downloadAccountAndPData",
                "tags": [
                    "Internal",
                    "Account Owner"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The unique identifier of the Account to be retrieved",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response. Required Account dump file in JSON format",
                        "schema": {
                            "$ref": "#/definitions/Account"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found - Account with provided username was not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/accounts/{accountId}/telephones": {
            "post": {
                "description": "Creates a new Telephone for an existing Account",
                "summary": "Create a new Telephone for an existing Account",
                "operationId": "addTelephone",
                "tags": [
                    "Internal",
                    "Account Owner"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The unique identifier of the Account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "description": "Object representing the Telephone to be created",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Telephone"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful Response; the Telephone was created successfully",
                        "schema": {
                            "$ref": "#/definitions/Telephone"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found - Account with provided username was not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "get": {
                "description": "Gets all the Telephones of an existing Account",
                "summary": "Get all Telephones of an existing Account",
                "operationId": "getTelephones",
                "tags": [
                    "Internal",
                    "Account Owner"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The unique identifier of the Account",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response; Required Telephones",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Telephone"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found - Telephones for the provided Account were not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/accounts/{accountId}/telephones/{telephoneId}": {
            "get": {
                "description": "Gets a specific Telephone of an existing Account",
                "summary": "Get a specific Telephone of an existing Account",
                "operationId": "getTelephone",
                "tags": [
                    "Internal",
                    "Account Owner"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The unique identifier of the Account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "telephoneId",
                        "in": "path",
                        "description": "The unique identifier of the Telephone to be retrieved",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response; the required Telephone",
                        "schema": {
                            "$ref": "#/definitions/Telephone"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found - Telephone for the provided Account was not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing Telephone of an existing Account",
                "summary": "Update an existing Telephone of an Account",
                "operationId": "updateTelephone",
                "tags": [
                    "Internal",
                    "Account Owner"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The unique identifier of the Account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "telephoneId",
                        "in": "path",
                        "description": "The unique identifier of the Telephone to be updated",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response; the Telephone was updated successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Telephone"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found - Telephone for the provided Account was not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an existing Telephone of an existing Account",
                "summary": "Delete an existing Telephone of an Account",
                "operationId": "deleteTelephone",
                "tags": [
                    "Internal",
                    "Account Owner"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The unique identifier of the Account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "telephoneId",
                        "in": "path",
                        "description": "The unique identifier of the Telephone to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response; the Telephone was deleted successfully"
                    },
                    "404": {
                        "description": "Not Found - Telephone for the provided Account was not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/accounts/{accountId}/contacts": {
            "post": {
                "description": "Creates a new Contact for an existing Account",
                "summary": "Create a new Contact for an existing Account",
                "operationId": "addContact",
                "tags": [
                    "Internal",
                    "Account Owner"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The unique identifier of the Account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "description": "Object representing the Contact to be created",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Contact"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful Response; the Contact was created successfully",
                        "schema": {
                            "$ref": "#/definitions/Contact"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found - Account with provided username was not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "get": {
                "description": "Gets all the Contacts of an existing Account",
                "summary": "Get all Contacts of an existing Account",
                "operationId": "getContacts",
                "tags": [
                    "Internal",
                    "Account Owner"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The unique identifier of the Account",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response; Required Contacts",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Contact"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found - Contacts for the provided Account were not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/accounts/{accountId}/contacts/{contactId}": {
            "get": {
                "description": "Gets a specific Contact of an existing Account",
                "summary": "Get a specific Contact of an existing Account",
                "operationId": "getContact",
                "tags": [
                    "Internal",
                    "Account Owner"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The unique identifier of the Account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "contactId",
                        "in": "path",
                        "description": "The unique identifier of the Contact to be retrieved",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response; the required Contact",
                        "schema": {
                            "$ref": "#/definitions/Contact"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found - Contact for the provided Account was not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing Contact of an existing Account",
                "summary": "Update an existing Contact of an existing Account",
                "operationId": "updateContact",
                "tags": [
                    "Internal",
                    "Account Owner"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The unique identifier of the Account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "contactId",
                        "in": "path",
                        "description": "The unique identifier of the Contact to be updated",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response; the Contact was updated successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Contact"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found - Contact for the provided Account was not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an existing Contact of an existing Account",
                "summary": "Delete an existing Contact of an existing Account",
                "operationId": "deleteContact",
                "tags": [
                    "Internal",
                    "Account Owner"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The unique identifier of the Account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "contactId",
                        "in": "path",
                        "description": "The unique identifier of the Contact to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response; the Contact was deleted successfully"
                    },
                    "404": {
                        "description": "Not Found - Contact for the provided Account was not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/accounts/{accountId}/emails": {
            "post": {
                "description": "Creates a new Email for an existing Account",
                "summary": "Create a new Email for an existing Account",
                "operationId": "addEmail",
                "tags": [
                    "Internal",
                    "Account Owner"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The unique identifier of the Account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "description": "Object representing the Email to be created",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Email"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful Response; the Email was created successfully",
                        "schema": {
                            "$ref": "#/definitions/Email"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found - Account with provided username was not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "get": {
                "description": "Gets all the Emails of an existing Account",
                "summary": "Get all Emails of an existing Account",
                "operationId": "getEmails",
                "tags": [
                    "Internal",
                    "Account Owner"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The unique identifier of the Account",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response; Required Emails",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Email"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found - Contacts for the provided Account were not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/accounts/{accountId}/emails/{emailId}": {
            "get": {
                "description": "Gets a specific Email of an existing Account",
                "summary": "Get a specific Email of an existing Account",
                "operationId": "getEmail",
                "tags": [
                    "Internal",
                    "Account Owner"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The unique identifier of the Account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "emailId",
                        "in": "path",
                        "description": "The unique identifier of the Email to be retrieved",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response; the required Email",
                        "schema": {
                            "$ref": "#/definitions/Email"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found - Email for the provided Account was not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing Email of an existing Account",
                "summary": "Update an existing Email of an existing Account",
                "operationId": "updateEmail",
                "tags": [
                    "Internal",
                    "Account Owner"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The unique identifier of the Account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "emailId",
                        "in": "path",
                        "description": "The unique identifier of the Email to be updated",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response; the Email was updated successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Email"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found - Email for the provided Account was not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an existing Email of an existing Account",
                "summary": "Delete an existing Email of an existing Account",
                "operationId": "deleteEmail",
                "tags": [
                    "Internal",
                    "Account Owner"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The unique identifier of the Account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "emailId",
                        "in": "path",
                        "description": "The unique identifier of the Email to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response; the Email was deleted successfully"
                    },
                    "404": {
                        "description": "Not Found - Email for the provided Account was not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/accounts/{accountId}/particular": {
            "post": {
                "description": "Creates a new Particular for an existing Account, overwriting, if any, the existing one.",
                "summary": "Create a new Particular for an existing Account",
                "operationId": "addParticular",
                "tags": [
                    "Internal",
                    "Account Owner"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The unique identifier of the Account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "description": "Object representing the Particular to be created",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Particular"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful Response; the Particular was created successfully",
                        "schema": {
                            "$ref": "#/definitions/Particular"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found - Account with provided username was not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "get": {
                "description": "Gets the Particular of an existing Account",
                "summary": "Get the Particular of an existing Account",
                "operationId": "getParticular",
                "tags": [
                    "Internal",
                    "Account Owner"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The unique identifier of the Account",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response; the required Particular",
                        "schema": {
                            "$ref": "#/definitions/Particular"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found - Particular for the provided Account was not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes the Particular of an existing Account",
                "summary": "Deletes the Particular of an existing Account",
                "operationId": "deleteParticular",
                "tags": [
                    "Internal",
                    "Account Owner"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The unique identifier of the Account",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response; the Particular was deleted successfully"
                    },
                    "404": {
                        "description": "Not Found - Particular for the provided Account was not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/accounts/{accountId}/serviceLinks": {
            "post": {
                "description": "Creates a new Service Link Record for an existing Account. It represents the link between a Service and the Account Owner's account. It is the result of the linkage process provided by CaPe (Account Manager itself). The goal is to store and retrieve Account Owner's personal data through the properties names required by the service.",
                "summary": "Creates a new Service Link Record for an existing Account",
                "operationId": "createServiceLinkRecord",
                "tags": [
                    "Internal",
                    "Account Owner"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The unique identifier of the Account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "description": "Object representing the Service Link Record to be created",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "serviceId": {
                                    "type": "string",
                                    "description": "Unique identifier of the service to be linked, it must be already registered in the CaPe (Service Manager) and must match with the one returned in the registration phase."
                                },
                                "serviceURI": {
                                    "type": "string",
                                    "description": "The location at which the service is available"
                                },
                                "userId": {
                                    "type": "string",
                                    "description": "The user identifier registered in the service (surrogate Id)"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful Response; the Service Link Record was created successfully",
                        "schema": {
                            "$ref": "#/definitions/ServiceLinkRecord"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found - Account with provided username was not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "get": {
                "description": "Gets all the Service Link Records of an existing Account",
                "summary": "Gets the Service Link Records of an existing Account",
                "operationId": "getServiceLinkRecords",
                "tags": [
                    "Internal",
                    "Account Owner"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The unique identifier of the Account",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response; Required Service Link Record",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ServiceLinkRecord"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found - Service Link Records for the provided Account were not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/accounts/{accountId}/services/{serviceId}/serviceLinks": {
            "get": {
                "description": "Gets a specific Service Link Record of an existing Account and specific Service",
                "summary": "Gets a specific Service Link Record of an existing Account and specific Service",
                "operationId": "getServiceLinkRecordByServiceId",
                "tags": [
                    "Internal",
                    "Account Owner"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The unique identifier of the Account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "description": "The unique identifier of the specific Service linked with the Account",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response; the required Service Link Record",
                        "schema": {
                            "$ref": "#/definitions/ServiceLinkRecord"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found - Service Link Record for the provided Account was not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{surrogateId}/services/{serviceId}/serviceLink": {
            "get": {
                "description": "Gets a specific Service Link Record of an existing Account and specific Service, starting from the existing user Id (surrogateId) in the service.",
                "summary": "Gets a specific Service Link Record of an existing Account and specific Service",
                "operationId": "getServiceLinkRecordBySurrogateIdAndServiceId",
                "tags": [
                    "External",
                    "Service"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "surrogateId",
                        "in": "path",
                        "description": "The unique identifier of the User at the Service",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "description": "The unique identifier of the specific Service linked with the Account",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response; the required Service Link Record",
                        "schema": {
                            "$ref": "#/definitions/ServiceLinkRecord"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found - Service Link Record for the provided Account was not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a specific Service Link Record of an existing Account and specific Service, starting from the existing user Id (surrogateId) in the service.",
                "summary": "Deletes a specific Service Link Record of an existing Account and specific Service",
                "operationId": "deleteServiceLinkRecordBySurrogateIdAndServiceId",
                "tags": [
                    "External",
                    "Service"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "surrogateId",
                        "in": "path",
                        "description": "The unique identifier of the User at the Service",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "description": "The unique identifier of the specific Service linked with the Account",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response; The Service Link Record was successfully deleted.",
                        "schema": {
                            "$ref": "#/definitions/ServiceLinkRecord"
                        }
                    },
                    "404": {
                        "description": "Not Found - Service Link Record for the provided Account was not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{surrogateId}/serviceLink": {
            "get": {
                "description": "Gets a Service Link Record of an existing Account, starting from the existing user Id (surrogateId) in the service.",
                "summary": "Gets a specific Service Link Record of an existing Account and specific Surrogate Id",
                "operationId": "getServiceLinkRecordBySurrogateId",
                "tags": [
                    "External",
                    "Service"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "surrogateId",
                        "in": "path",
                        "description": "The unique identifier of the User at the Service",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response; the required Service Link Record",
                        "schema": {
                            "$ref": "#/definitions/ServiceLinkRecord"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found - Service Link Record for the provided Account and surrogate Id was not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/accounts/{accountId}/serviceLinks/{slrId}": {
            "get": {
                "description": "Gets a specific Service Link Record of an existing Account",
                "summary": "Get a specific Service Link Record of an existing Account",
                "operationId": "getServiceLinkRecord",
                "tags": [
                    "Internal",
                    "Account Owner"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The unique identifier of the Account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "slrId",
                        "in": "path",
                        "description": "The unique identifier of the Service Link Record to be retrieved",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response; The Service Link Record was successfully deleted.",
                        "schema": {
                            "$ref": "#/definitions/ServiceLinkRecord"
                        }
                    },
                    "404": {
                        "description": "Not Found - Service Link Record for the provided Account was not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Disables a specific Service Link Record of an existing Account. This operation is different from deletion, because the Service Link is kept and can be reactivated in a second moment, by using the createServiceLink operation.",
                "summary": "Disables a specific Service Link Record of an existing Account",
                "operationId": "disableServiceLinkRecord",
                "tags": [
                    "Internal",
                    "Account Owner"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The unique identifier of the Account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "slrId",
                        "in": "path",
                        "description": "The unique identifier of the Service Link Record to be disabled",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response; The Service Link Record was successfully disabled.",
                        "schema": {
                            "$ref": "#/definitions/ServiceLinkRecord"
                        }
                    },
                    "404": {
                        "description": "Not Found - Service Link Record for the provided Account was not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a specific Service Link Record of an existing Account",
                "summary": "Deletes a specific Service Link Record of an existing Account",
                "operationId": "deleteServiceLinkRecord",
                "tags": [
                    "Internal",
                    "Account Owner"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The unique identifier of the Account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "slrId",
                        "in": "path",
                        "description": "The unique identifier of the Service Link Record to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response; the required Service Link Record",
                        "schema": {
                            "$ref": "#/definitions/ServiceLinkRecord"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found - Service Link Record for the provided Account was not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Account": {
            "type": "object",
            "description": "It contains all the information related to the Account Owner. It also contains all the Service Link Records related to the Account.",
            "properties": {
                "_id": {
                    "type": "string",
                    "description": "Unique identifier assigned by Account Manager"
                },
                "username": {
                    "type": "string",
                    "description": "Username used as access credential for the Account Owner"
                },
                "password": {
                    "type": "string",
                    "description": "Password used as access credential for the Account Owner"
                },
                "activated": {
                    "type": "boolean",
                    "description": "The Account activation status"
                },
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Creation timestamp in ISO 8601 format. E.g. 'yyyy-MM-ddTHH:mm:ssZ'"
                },
                "modified": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Last update timestamp in ISO 8601 format. E.g. 'yyyy-MM-ddTHH:mm:ssZ'"
                },
                "telephones": {
                    "type": "array",
                    "description": "The list of Account Owner's telephones",
                    "items": {
                        "$ref": "#/definitions/Telephone"
                    }
                },
                "emails": {
                    "type": "array",
                    "description": "The list of Account Owner's email addresses",
                    "items": {
                        "$ref": "#/definitions/Email"
                    }
                },
                "contacts": {
                    "type": "array",
                    "description": "The list of Account Owner's contacts",
                    "items": {
                        "$ref": "#/definitions/Contact"
                    }
                },
                "particular": {
                    "$ref": "#/definitions/Particular"
                },
                "serviceLinkRecords": {
                    "type": "array",
                    "description": "The list of Account Owner's Service Link Records",
                    "items": {
                        "$ref": "#/definitions/ServiceLinkRecord"
                    }
                },
                "pData": {
                    "type": "array",
                    "description": "The list of Account Owner's Personal Data stored in the CaPe",
                    "items": {
                        "$ref": "#/definitions/PData"
                    }
                }
            }
        },
        "Type": {
            "type": "string",
            "enum": [
                "PERSONAL",
                "WORK",
                "SCHOOL",
                "OTHER"
            ]
        },
        "Email": {
            "type": "object",
            "description": "This entity represents the email address of the entity which belongs to.",
            "properties": {
                "_id": {
                    "type": "string",
                    "description": "Unique identifier assigned by Account Manager"
                },
                "email": {
                    "type": "string",
                    "description": "Email address. E.g. user@domain.com"
                },
                "Type": {
                    "$ref": "#/definitions/Type",
                    "description": "Specific email type ( PERSONAL, WORK, SCHOOL,OTHER)"
                },
                "primary": {
                    "type": "boolean",
                    "description": "Indicates if the Email object is considered the primary one."
                }
            }
        },
        "Contact": {
            "type": "object",
            "description": "This entity represents the detailed Contact information of the entity which belongs to.",
            "properties": {
                "_id": {
                    "type": "string",
                    "description": "Unique identifier assigned by Account Manager"
                },
                "address1": {
                    "type": "string",
                    "description": "Primary address"
                },
                "address2": {
                    "type": "string",
                    "description": "Alternative address"
                },
                "postalCode": {
                    "type": "string",
                    "description": "Address Postal Code"
                },
                "city": {
                    "type": "string",
                    "description": "City"
                },
                "state": {
                    "type": "string",
                    "description": "State"
                },
                "country": {
                    "type": "string",
                    "description": "Country (same of State, if not in US)"
                },
                "type": {
                    "$ref": "#/definitions/Type",
                    "description": "Specific contact type ( PERSONAL, WORK, SCHOOL,OTHER)"
                },
                "primary": {
                    "type": "boolean"
                }
            }
        },
        "Particular": {
            "type": "object",
            "description": "This entity represents the additional information of the entity which belongs to.",
            "properties": {
                "_id": {
                    "type": "string",
                    "description": "Unique identifier assigned by Account Manager"
                },
                "firstname": {
                    "type": "string",
                    "description": "First name"
                },
                "lastname": {
                    "type": "string",
                    "description": "Last name"
                },
                "dateOfBirth": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Creation timestamp in ISO 8601 format. E.g. 'yyyy-MM-ddTHH:mm:ssZ'"
                },
                "imgUrl": {
                    "type": "string",
                    "description": "Url to the profile image"
                }
            }
        },
        "Telephone": {
            "type": "object",
            "description": "This entity represents the telephone of the entity which belongs to.",
            "properties": {
                "_id": {
                    "type": "string",
                    "description": "Unique identifier assigned by Account Manager"
                },
                "tel": {
                    "type": "string",
                    "description": "Full phone number"
                },
                "type": {
                    "$ref": "#/definitions/Type",
                    "description": "Specific telephone type ( PERSONAL, WORK, SCHOOL,OTHER)"
                },
                "primary": {
                    "type": "boolean"
                }
            }
        },
        "ServiceLinkRecord": {
            "type": "object",
            "description": "This entity represents the link between a Service and the Account Owner's account. It is the result of the linkage process provided by CaPe (Account Manager). The goal is to store and retrieve Account Owner's personal data through the properties names required by the service.",
            "properties": {
                "_id": {
                    "type": "string",
                    "description": "Unique identifier assigned by Account Manager"
                },
                "serviceId": {
                    "type": "string",
                    "description": "Unique identifier of the linked service relative to this Service Link Record"
                },
                "surrogateId": {
                    "type": "string",
                    "description": "The surrogate identifier of the Account Owner. It is a pseudonym that associates Account Owner to his/her account at the service."
                },
                "accountId": {
                    "type": "string",
                    "description": "The unique identifier of the Account, assigned by the Account Manager, related to the surrogateId"
                },
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The creation timestamp in ISO 8601 format. E.g. 'yyyy-MM-ddTHH:mm:ssZ'"
                },
                "serviceLinkStatusRecords": {
                    "type": "array",
                    "description": "The list of the statuses of this Service Link Record. It can have more than one status, in order to track its life cycle.",
                    "items": {
                        "$ref": "#/definitions/ServiceLinkStatusRecord"
                    }
                }
            }
        },
        "ServiceLinkStatusRecord": {
            "type": "object",
            "description": "This entity represents the detailed status of a Service Link Record.",
            "properties": {
                "_id": {
                    "type": "string",
                    "description": "Unique identifier assigned by Account Manager"
                },
                "serviceLinkStatus": {
                    "type": "string"
                },
                "issuedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The creation timestamp in ISO 8601 format. E.g. 'yyyy-MM-ddTHH:mm:ssZ'"
                }
            }
        },
        "PData": {
            "type": "object",
            "description": "The Object representing an Account owner's Personal Data.",
            "properties": {
                "conceptId": {
                    "type": "string",
                    "description": "The identifier of the semantic concept related to Personal Data"
                },
                "name": {
                    "type": "string",
                    "description": "The user-friendly name of the Personal Data"
                },
                "type": {
                    "type": "string",
                    "description": "The semantic type of the Personal Data value"
                },
                "values": {
                    "type": "array",
                    "description": "The array of multiple values of the Personal Data",
                    "items": {
                        "type": "string"
                    }
                },
                "timestamp": {
                    "type": "string",
                    "description": "The last edit timestamp of Personal Data in ISO 8601 format. E.g. 'yyyy-MM-ddTHH:mm:ssZ'",
                    "format": "date-time"
                }
            }
        },
        "ErrorResponse": {
            "type": "object",
            "description": "The Object representing the Error information",
            "properties": {
                "statusCode": {
                    "type": "string",
                    "description": "The HTTP status code"
                },
                "error": {
                    "type": "string",
                    "description": "The detailed runtime error"
                },
                "message": {
                    "type": "string",
                    "description": "The message related to runtime error"
                }
            }
        }
    },
    "securityDefinitions": {
        "Oauth": {
            "type": "oauth2",
            "tokenUrl": "https://idm.opsilab.it/oauth2/token",
            "flow": "client",
            "scopes": {
                "write": "write scope",
                "read": "read scope"
            }
        }
    },
    "security": [
        {
            "Oauth": [
                "write",
                "read"
            ]
        }
    ]
}