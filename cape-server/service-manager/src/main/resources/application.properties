#-------------------------------------------------------------------------------
# CaPe - A Consent Based Personal Data Suite
#  Copyright (C) 2021 Engineering Ingegneria Informatica S.p.A.
#  
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
#  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#-------------------------------------------------------------------------------
####################################################
spring.profiles.active=${PROFILE:}

cape.version=2.1.0
cape.releaseTimestamp=2020-06-01T00:00:00Z
cape.operatorId=${CAPE_OPERATOR_ID:cape}

###################### CaPe Module Configuration ############################

server.port=${port:8082}

#### Public base Url (used for URI Locations)
cape.serviceManager.host=${CAPE_SERVICE_MANAGER_URL:http://localhost:8080/service-manager}
####

cape.accountManager.host=${CAPE_ACCOUNT_MANAGER_URL:http://localhost:8080/account-manager}
cape.consentManager.host=${CAPE_CONSENT_MANAGER_URL:http://localhost:8083/consent-manager}
cape.auditLogManager.host=${CAPE_AUDITLOG_MANAGER_URL:http://localhost:8081/auditlog-manager}
cape.serviceRegistry.host=${CAPE_SERVICE_REGISTRY_URL:http://localhost:8088/service-registry}

############ SPRING CONFIGURATION ##############################
server.servlet.context-path=${CONTEXT_PATH:/service-manager}
springdoc.api-docs.path=${APIDOCS_PATH:/api-docs}

#################### LOGGING CONFIGURATION ####################################
# logging level
logging.level.org.springframework=${SPRING_LOGGING_LEVEL:INFO}
logging.level.org.mongodb=${MONGO_LOGGING_LEVEL:ERROR}
logging.level.it.eng.opsi.cape.servicemanager=${CAPE_LOGGING_LEVEL:ERROR}
logging.level.org.springframework.security=${SECURITY_LOGGING_LEVEL:ERROR}
logging.level.org.springframework.web=${WEB_LOGGING_LEVEL:ERROR}
logging.pattern.console=%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n

########################## Mongo DB #####################################
spring.data.mongodb.auto-index-creation=false
spring.data.mongodb.host=${CAPE_SERVICE_MANAGER_MONGODB_HOST:localhost}
spring.data.mongodb.port=${CAPE_SERVICE_MANAGER_MONGODB_PORT:27017}
spring.data.mongodb.database=${CAPE_SERVICE_MANAGER_MONGODB_DB:serviceManagement}
spring.data.mongodb.authentication-database=admin
spring.data.mongodb.username=${CAPE_SERVICE_MANAGER_MONGODB_USER:root}
spring.data.mongodb.password=${CAPE_SERVICE_MANAGER_MONGODB_PWD:root}

## HTTP CLIENT & PROXY CONFIGURATION ############
cape.http.maxTotalConnections=100
cape.http.maxRouteConnections=20
cape.http.maxLocalhostConnections=50
cape.http.defaultKeepAliveTime=2000
cape.http.idleConnectionWaitTime=3000

cape.http.proxyEnabled=false
cape.http.proxyHost=
cape.http.proxyPort=
cape.http.proxyUser=
cape.http.proxyPassword=
cape.http.nonProxyHosts=localhost|*.eng.it

########################### AUTHENTICATION CONFIGURATION ##################
spring.security.oauth2.resourceserver.jwt.issuer-uri=${CAPE_IDM_ISSUER_URI:https://www.cape-suite.eu/auth/realms/Cape}
cape.cors.allowed-origin-patterns=${CAPE_IDM_ALLOWED_ORIGIN_PATTERNS:.?cape-suite.eu}
cape.cors.allowed-origins=${CAPE_IDM_ALLOWED_ORIGINS:}